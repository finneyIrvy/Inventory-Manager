


<style>
    .modal-title {
        font-family: 'Raleway', sans-serif;
        color: #FF6F00;
    }
</style>



<h5 class=" mb-3" style="font-family: 'Raleway', sans-serif; color: #FF6F00;">@Model.FolderName</h5>


<div class="row">
    <div class="col-6">
        <!-- Button to Open the Modal -->
        <button type="button" class="btn btn-sm mb-3" style="font-family: 'Raleway', sans-serif; background-color: #008080; color: white;" data-bs-toggle="modal" data-bs-target="#addProductModal">
            <i class="fas fa-plus"></i> Add Item
        </button>

    </div>
    <div class="d-flex justify-content-end mb-3 col-6">
        <a href="@Url.Action("ExportToPDF", "Home", new { folderId = Model.FolderID })" class="btn btn-sm btn-danger">
            <i class="fas fa-file-pdf"></i> Export to PDF
        </a>
    </div>

</div>

@if (TempData["Message"] != null)
{
    <div id="tempMessage" class="alert alert-@TempData["MessageType"] col-md-4" role="alert">
        @TempData["Message"]
    </div>

    <script>
        setTimeout(function () {
            document.getElementById('tempMessage').style.display = 'none';
        }, 5000);
    </script>
}

<!-- The Modal -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addProductModalLabel">Add New Product</h5>
               
            </div>
            <div class="modal-body">
                <!-- Form inside the modal -->
                <form asp-action="AddProductToFolder" method="post" enctype="multipart/form-data" onsubmit="showSpinner(this)">
                    <input type="hidden" name="folderId" value="@Model.FolderID" />

                    <div class="mb-3">
                        <label for="ProductName" class="form-label">Product Name</label>
                        <input type="text" class="form-control" name="ProductName" id="ProductName" placeholder="Enter product name" required>
                    </div>

                    <div class="mb-3">
                        <label for="Category" class="form-label">Category</label>
                        <input type="text" class="form-control" name="Category" id="Category" placeholder="Enter category" required>
                    </div>

                    <div class="mb-3">
                        <label for="Location" class="form-label">Location</label>
                        <input type="text" class="form-control" name="Location" id="Location" placeholder="Enter location">
                    </div>

                    <div class="mb-3">
                        <label for="Quantity" class="form-label">Quantity</label>
                        <input type="number" class="form-control" name="Quantity" id="Quantity" placeholder="Enter quantity" min="0" required>
                    </div>

                    <div class="mb-3">
                        <label for="ImagePath" class="form-label">Product Image</label>
                        <input type="file" class="form-control" name="imageFile" id="ImagePath">
                    </div>

                    <div class="modal-footer text-right">
                        <button type="submit" class="btn btn-sm" id="submitBtn" style="font-family: 'Raleway', sans-serif;background-color: #008080; color: white;">
                            <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                            Submit
                        </button>
                        <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </form>

                <script>
                    function showSpinner(form) {
                        const submitButton = form.querySelector('#submitBtn');
                        const spinner = submitButton.querySelector('.spinner-border');
                        spinner.classList.remove('d-none');
                        submitButton.disabled = true;
                    }
                </script>

            </div>
        </div>
    </div>
</div>



@if (Model.Products.Count == 0)
{
    <div class="d-flex justify-content-center align-items-center" style="height: 60vh; border: 1px solid #ccc; border-radius: 10px; padding: 20px;">
        <i class="fas fa-folder-plus" style="font-size: 8rem; color: #008080;"></i>
    </div>
}
else
{
    <table class="table table-striped mt-3">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Category</th>
                <th>Location</th>
                <th>Quantity</th>
                <th>Stock Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model.Products)
            {
                <tr class="@(product.Quantity <= product.MinStockLevel ? "table-danger" : "")">
                    <td>@product.ProductName</td>
                    <td>@product.Category</td>
                    <td>@product.Location</td>
                    <td>@product.Quantity</td>
                    <td>
                        @if (product.Quantity <= product.MinStockLevel)
                        {
                            <span class="badge">Low Stock</span>
                        }
                        else
                        {
                            <span class="badge bg-success">In Stock</span>
                        }
                    </td>
                    <td>
                        <a href="@Url.Action("EditProduct", "Home", new { id = product.ProductID })" class="btn btn-sm btn-warning">Edit</a>
                        <button type="button" class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#moveProductModal" data-url="@Url.Action("MoveProduct", "Home", new { id = product.ProductID })">Move</button>
                        <form method="post" action="@Url.Action("DeleteProduct", "Home", new { id = product.ProductID })" style="display:inline;">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure?')">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


<!-- Move Product Modal -->
<div class="modal fade" id="moveProductModal" tabindex="-1" role="dialog" aria-labelledby="moveProductModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="moveProductModalLabel">Move Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- The form content will be loaded here via AJAX -->
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function () {
    var moveProductModal = document.getElementById('moveProductModal');
    moveProductModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var url = button.getAttribute('data-url');
        var modalBody = moveProductModal.querySelector('.modal-body');

        // Fetch the form content via AJAX
        fetch(url)
            .then(response => response.text())
            .then(html => {
                modalBody.innerHTML = html;
            })
            .catch(error => {
                console.error('Error loading modal content:', error);
                modalBody.innerHTML = '<p class="text-danger">An error occurred while loading the form.</p>';
            });
    });
});

</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
