@using Inventory_Management_System__Miracle_Shop_.ViewModel

<style>
    .modal-title {
        font-family: 'Raleway', sans-serif;
        color: #FF6F00;
    }
</style>

<h5 class="mb-3" style="font-family: 'Raleway', sans-serif; color: #FF6F00;">@Model.FolderName</h5>

<div class="row">
    <div class="col-6 d-flex gap-2">
        <!-- PDF Download Button -->
        <a href="@Url.Action("ExportToPDF", "Home", new { folderId = Model.FolderID })" class="mr-3 " style="color:#FF6F00;text-decoration:none;">
            <i class="fas fa-download" style="color:#FF6F00;"></i> Export
        </a>

      
        <form asp-action="ImportFromExcel" asp-controller="Home" method="post" enctype="multipart/form-data">
            <input type="hidden" name="folderId" value="@ViewBag.FolderID" />

            <!-- Hidden file input -->
            <input type="file" id="excelFileInput" name="file" accept=".xls, .xlsx" style="display: none;" />

            <!-- Excel Icon as Upload Button -->
            <a type="button" id="excelUploadBtn">
                <i class="fas fa-file-excel text-success"></i> Import Excel
            </a>
        </form>


    </div>

    <div class="d-flex justify-content-end  col-6">
        <button type="button" class="btn btn-sm mb-3" style="font-family: 'Raleway', sans-serif; background-color: #008080; color: white;" data-bs-toggle="modal" data-bs-target="#addProductModal">
            <i class="fas fa-plus"></i> Add Item
        </button>
    </div>
</div>

@if (TempData["Message"] != null)
{
    <div id="tempMessage" class="alert alert-@TempData["MessageType"] col-md-4" role="alert">
        @TempData["Message"]
    </div>
    <script>
        setTimeout(function () {
            document.getElementById('tempMessage').style.display = 'none';
        }, 5000);
    </script>
}

<!-- Add Product Modal -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addProductModalLabel">Add New Product</h5>
            </div>
            <div class="modal-body">
                <form asp-action="AddProductToFolder" method="post" enctype="multipart/form-data" onsubmit="showSpinner(this)">
                    <input type="hidden" name="folderId" value="@Model.FolderID" />
                    <div class="mb-3">
                        <label for="ProductName" class="form-label">Product Name</label>
                        <input type="text" class="form-control" name="ProductName" id="ProductName" placeholder="Enter product name" required>
                    </div>
                    <div class="mb-3">
                        <label for="Category" class="form-label">Category</label>
                        <input type="text" class="form-control" name="Category" id="Category" placeholder="Enter category" required>
                    </div>
                    <div class="mb-3">
                        <label for="Location" class="form-label">Location</label>
                        <input type="text" class="form-control" name="Location" id="Location" placeholder="Enter location">
                    </div>
                    <div class="mb-3">
                        <label for="Quantity" class="form-label">Quantity</label>
                        <input type="number" class="form-control" name="Quantity" id="Quantity" placeholder="Enter quantity" min="0" required>
                    </div>
                    <div class="mb-3">
                        <label for="ImagePath" class="form-label">Product Image</label>
                        <input type="file" class="form-control" name="imageFile" id="ImagePath">
                    </div>
                    <div class="modal-footer text-right">
                        <button type="submit" class="btn btn-sm" id="submitBtn" style="font-family: 'Raleway', sans-serif;background-color: #008080; color: white;">
                            <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                            Submit
                        </button>
                        <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </form>
                <script>
                    function showSpinner(form) {
                        const submitButton = form.querySelector('#submitBtn');
                        const spinner = submitButton.querySelector('.spinner-border');
                        spinner.classList.remove('d-none');
                        submitButton.disabled = true;
                    }
                </script>
            </div>
        </div>
    </div>
</div>

@if (ViewBag.Products == null || ViewBag.Products.Count == 0)
{
    <div class="d-flex flex-column justify-content-center align-items-center" style="height: 60vh; border: 1px solid #ccc; border-radius: 10px; padding: 20px;">
        <i class="fas fa-box-open" style="font-size: 8rem; color: #008080;"></i>
        <p class="mt-3 " style="font-family: 'Raleway', sans-serif; color: #FF6F00;">No items in this folder. Click 'Add Item' to get started.</p>
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped mt-1">
            <thead>
                <tr>
                    <th>#</th> <!-- Column for numbering -->
                    <th>Product Name</th>
                    <th>Category</th>
                    <th>Location</th>
                    <th>Quantity</th>
                    <th>Stock Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int rowNumber = 1; // Initialize row counter
                }
                @foreach (var product in Model.Products)
                {
                    <tr class="@(product.Quantity <= product.MinStockLevel ? "table-danger" : "")">
                        <td>@rowNumber</td> <!-- Display row number -->
                        <td>@product.ProductName</td>
                        <td>@product.Category</td>
                        <td>@product.Location</td>
                        <td>@product.Quantity</td>
                        <td>
                            @if (product.Quantity <= product.MinStockLevel)
                            {
                                <span class="badge bg-danger"><i class="fas fa-exclamation-triangle"></i> Low Stock</span>
                            }
                            else
                            {
                                <span class="badge bg-success"><i class="fas fa-check-circle"></i> In Stock</span>
                            }
                        </td>
                        <td>
                            <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#moveProductModal" data-product-id="@product.ProductID">
                                <i class="fas fa-exchange-alt"></i> Move
                            </button>
                            <a href="@Url.Action("EditProduct", "Home", new { id = product.ProductID })" class="btn btn-sm btn-warning">
                                <i class="fas fa-edit"></i> Edit
                            </a>
                            <form method="post" action="@Url.Action("DeleteProduct", "Home", new { id = product.ProductID })" style="display:inline;">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure?')">
                                    <i class="fas fa-trash-alt"></i> Delete
                                </button>
                            </form>
                        </td>
                    </tr>

                    rowNumber++; // Increment row number
                }
            </tbody>
        </table>
    </div>


}

<!-- Move Product Modal -->
<div class="modal fade" id="moveProductModal" tabindex="-1" role="dialog" aria-labelledby="moveProductModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="moveProductModalLabel">Move Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">

                <form id="moveProductForm" method="post" action="@Url.Action("MoveProduct", "Home")">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="moveProductId" /> <!-- Change name from ProductID to id -->

                    <div class="mb-3">
                        <label for="targetFolder" class="form-label">Select Folder</label>
                        <select name="destinationFolderId" id="targetFolder" class="form-control" required>
                            <!-- Change name -->
                            <option value="" disabled selected>-- Select a Folder --</option>
                            @if (ViewBag.AllFolders != null)
                            {
                                @foreach (var folder in ViewBag.AllFolders)
                                {
                                    <option value="@folder.FolderID">@folder.FolderName</option>
                                }
                            }
                            else
                            {
                                <option value="" disabled>No folders available</option>
                            }
                        </select>
                    </div>

                    <div class="mt-3">
                        <button type="submit" id="submitButton" class="btn btn-sm" style="background-color: #008080; color: white;">
                            Move
                            <span id="spinner" class="spinner-border spinner-border-sm text-light" role="status" aria-hidden="true" style="display: none;"></span>
                        </button>
                        <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>

            </div>



        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Select all "Move" buttons
        document.querySelectorAll("[data-bs-target='#moveProductModal']").forEach(button => {
            button.addEventListener("click", function () {
                let productId = this.getAttribute("data-product-id"); // Get Product ID
                document.getElementById("moveProductId").value = productId; // Set hidden input value
            });
        });

        // Debugging: Check if ProductID is set before submitting
        document.getElementById("moveProductForm").addEventListener("submit", function (event) {
            let productId = document.getElementById("moveProductId").value;
            if (!productId) {
                alert("Error: No product selected to move!");
                event.preventDefault(); // Prevent form submission if ProductID is missing
            }
        });
    });
</script>

<script>
    document.getElementById("excelUploadBtn").addEventListener("click", function () {
        document.getElementById("excelFileInput").click(); // Open file picker
    });

    document.getElementById("excelFileInput").addEventListener("change", function () {
        if (this.files.length > 0) {
            this.form.submit(); // Automatically submit form after file selection
        }
    });
</script>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
